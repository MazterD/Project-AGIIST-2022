---
# file: ansible-gcp-servers-setup-all.yml
# configures the server instances
# This Playbook has Three Plays: one for critical configurations in all servers
# A second one for installing software in web servers
# a third one to install software in the Load Balancer server

# This First Play Sets up critical configuration on servers
- hosts: targets
  # as the systems are not yet "known" by Ansible Facts cannot be gathered yet
  gather_facts: no
  remote_user: ubuntu
  become: yes
  become_method: sudo

  pre_tasks:
    # To operate remotely in critical files without direct user input
    - name: Remove require tty - alt
      lineinfile:
        regexp: "requiretty"
        dest: /etc/sudoers.d/os_defaults
        state: absent
    # Giving permissions in sudoers for system critical files (see https://docs.ansible.com/ansible/latest/modules/lineinfile_module.html)
    - name: Validate the sudoers file before saving  not to require password
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%ADMIN ALL='
        line: '%ADMIN ALL=(ALL) NOPASSWD: ALL'
        validate: /usr/sbin/visudo -cf %s
    # Install the SSH key on servers
    - name: install ssh key
      authorized_key:
        user: ubuntu
        key: "{{ lookup('file', '../id_rsa.pub') }}"
        state: present

# This Second Play installs the required software in web servers
# tasks names are self explanatory
- hosts: targets
  gather_facts: True
  remote_user: ubuntu
  become: yes
  become_method: sudo

  tasks:
    - name: Add NGINX Repository
      apt_repository:
        repo: ppa:nginx/stable
        state: present
  
    - name: install tar
      apt:
        pkg: tar
        state: present


# This fourth Play installs Prometheus and Grafana
- hosts: monitoring
  gather_facts: yes
  remote_user: ubuntu
  become: yes
  become_method: sudo
 
  tasks:
    - name: Install prometheus
      unarchive:
        src: "https://github.com/prometheus/prometheus/releases/download/v2.37.2/prometheus-2.37.2.linux-amd64.tar.gz"
        dest: /home/ubuntu
        remote_src: yes
    
    - name: launch prometheus service
      copy:
        src: ../prometheus.service
        dest: /etc/systemd/system/
        systemd:
          daemon_reload: yes
    - name: Start prometheus service
      service:
        name: prometheus
        state: started
        enabled: yes
    - name: Check if prometheus is accessible
      uri:
        url: http://localhost:9090
        method: GET
        status_code: 200


- hosts: targets
  gather_facts: True
  remote_user: ubuntu
  become: yes
  become_method: sudo

  tasks:
    - name: Install prometheus node exporter
      unarchive:
        src: "https://github.com/prometheus/node_exporter/releases/download/v1.4.0/node_exporter-1.4.0.linux-amd64.tar.gz"
        dest: /home/ubuntu
        remote_src: yes
    
    - name: launch node_exporter service
      copy:
        src: ../node_exporter.service
        dest: /etc/systemd/system/
    - name: Start node_exporter service
      service:
        name: node_exporter
        state: started
        enabled: yes
    - name: Check if node exporter emits metrics
      uri:
        url: http://127.0.0.1:9100/metrics
        method: GET
        status_code: 200
